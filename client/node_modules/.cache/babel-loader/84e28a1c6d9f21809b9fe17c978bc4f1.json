{"ast":null,"code":"var _jsxFileName = \"G:\\\\private\\\\udemy\\\\React\\\\zerotomaster\\\\bs-prints-webstore\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, signInWithGoogle } from './../../firebase/firebase.utils';\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in.styles';\nimport { googleSignInStart } from '../../redux/user/user.actions';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return React.createElement(SignInContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(SignInTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \" I already have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Sign in with your email and password \"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      handleChange: this.handleChange,\n      label: \"email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(ButtonsBarContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Sign in\"), React.createElement(CustomButton, {\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Sign in with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["G:/private/udemy/React/zerotomaster/bs-prints-webstore/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","FormInput","CustomButton","auth","signInWithGoogle","SignInContainer","SignInTitle","ButtonsBarContainer","googleSignInStart","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","email","password","state","signInWithEmailAndPassword","setState","error","console","log","handleChange","value","name","target","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n \r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport { auth , signInWithGoogle } from './../../firebase/firebase.utils';\r\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in.styles';\r\nimport { googleSignInStart } from '../../redux/user/user.actions';\r\n\r\nclass SignIn extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    const { email, password } = this.state;\r\n\r\n    try {\r\n      await auth.signInWithEmailAndPassword(email, password);\r\n      this.setState({ email: '', password: '' });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  handleChange = event => {\r\n    const { value, name } = event.target;\r\n\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n  render() {\r\n    const { googleSignInStart } = this.props;\r\n    return (\r\n      <SignInContainer >\r\n        <SignInTitle> I already have an account</SignInTitle>\r\n        <span>Sign in with your email and password </span>\r\n\r\n        <form onSubmit={this.handleSubmit}>\r\n\r\n          <FormInput\r\n            name=\"email\"\r\n            type=\"email\"\r\n            value={this.state.email}\r\n            handleChange={this.handleChange}\r\n            label=\"email\"\r\n            required\r\n          />\r\n          <FormInput\r\n            name=\"password\"\r\n            type=\"password\"\r\n            value={this.state.password}\r\n            handleChange={this.handleChange}\r\n            label=\"password\"\r\n            required\r\n          />\r\n          <ButtonsBarContainer>\r\n            <CustomButton type='submit'>Sign in</CustomButton>\r\n            <CustomButton onClick={googleSignInStart} isGoogleSignIn >Sign in with Google</CustomButton>\r\n          </ButtonsBarContainer>\r\n          \r\n        </form>\r\n      </SignInContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  googleSignInStart: () => dispatch(googleSignInStart())\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}